export const fieldsSourceData = {
  main: [
    {
      value: 'name',
      name: 'Order name',
      description:
        "The order name, generated by combining the order_number property with the order prefix and suffix that are set in the merchant's general settings. This is different from the id property, which is the ID of the order used by the API. This field can also be set by the API to be any string value.",
    },
    {
      value: 'buyer_accepts_marketing',
      name: 'Buyer Accepts Marketing',
      description:
        "Indicates whether or not the person who placed the order would like to receive email updates from the shop. This is set when checking the 'I want to receive occasional emails about new products, promotions and other news' checkbox during checkout. Valid values are 'true' and 'false.'",
    },
    {
      value: 'closed_at',
      name: 'Cancelled at',
      description: 'The date and time when the order was closed.',
    },
    {
      value: 'processed_at',
      name: 'Created at',
      description: 'The date and time when the order was processed.',
    },
    {
      value: 'currency',
      name: 'Currency',
      description: 'The three letter code (ISO 4217) for the currency used for the payment.',
    },
    {
      value: 'total_discounts',
      name: 'Discount Amount',
      description: 'The total amount of the discounts to be applied to the price of the order.',
    },
    {
      value: 'email',
      name: 'Email',
      description: "The customer's email address.",
    },
    {
      value: 'financial_status',
      name: 'Financial Status',
      description:
        'Valid values for Financial Status are as follows:<br><ul><li><b>pending</b>: The finances are pending.</li><li><b>authorized</b>: The finances have been authorized.</li><li><b>partially_paid</b>: The finances have been partially paid.</li><li><b>paid</b>: The finances have been paid. (This is the default value.)"</li><li><b>partially_refunded</b>: The finances have been partially refunded.</li><li><b>refunded</b>: The finances have been refunded.</li><li><b>voided</b>: The finances have been voided.</li></ul>',
    },
    {
      value: 'fulfillment_status',
      name: 'Fulfillment Status',
      description:
        "The order's status in terms of fulfilled line items. Valid values:<br><ul><li><b>fulfilled</b>:  Every line item in the order has been fulfilled.</li><li><b>unfulfilled</b>: None of the line items in the order have been fulfilled.</li><li><b>partial</b>: At least one line item in the order has been fulfilled.</li><li><b>restocked</b>: Every line item in the order has been restocked and the order canceled.</ul>",
    },
    {
      value: 'location_id',
      name: 'Location Id',
      description: 'The ID of the physical location where the order was processed.',
    },
    {
      value: 'note_attributes',
      name: 'Note Attributes',
      description: 'Extra information that is added to the order.',
    },
    {
      value: 'note',
      name: 'Notes',
      description: 'The text of an optional note that a shop owner can attach to the order.',
    },
    {
      value: 'phone',
      name: 'Phone',
      description: 'The unique phone number (E.164 format) for this customer.',
    },
    {
      value: 'referring_site',
      name: 'Referring Site',
      description: 'The website that the customer clicked on to come to the shop.',
    },
    {
      value: 'tags',
      name: 'Tags',
      description:
        'Tags are additional short descriptors, commonly used for filtering and searching, formatted as a string of comma-separated values. For example, if an order has three tags: tag1, tag2, tag3. Each individual tag is limited to 40 characters in length.',
    },
    {
      value: 'total_tax',
      name: 'Taxes',
      description: 'The sum of all the taxes applied to the order.',
    },
    {
      value: 'taxes_included',
      name: 'Taxes Included',
      description: 'Whether or not taxes are included in the order subtotal.',
    },
    {
      value: 'total_weight',
      name: 'Total Weight',
      description: 'The sum of all the weights of the line items in the order, in grams.',
    },
  ],
  customer: [
    {
      value: 'customer.email',
      name: 'Email',
      description: `The customer's email address.`,
    },
    {
      value: 'customer.first_name',
      name: 'Customer First Name',
      description: `The customer's first name.`,
    },
    {
      value: 'customer.last_name',
      name: 'Customer Last Name',
      description: `The customer's last name.`,
    },
    {
      value: 'customer.phone',
      name: 'Phone',
      description: `The unique phone number (E.164 format) for this customer.`,
    },
    {
      value: 'customer.note',
      name: 'Customer Note',
      description: `Extra information about the customer.`,
    },
  ],
  lineItems: [
    {
      value: 'line_items.title',
      name: 'Line Item Name',
      description: `The title of the product.`,
    },
    {
      value: 'line_items.price',
      name: 'Line Item Price',
      description: `The price of the item before discounts have been applied.`,
    },
    {
      value: 'line_items.quantity',
      name: 'Line Item Quantity',
      description: `The number of products that were purchased.`,
    },
    {
      value: 'line_items.fulfillment_status',
      name: 'Line Item Fulfillment Status',
      description: `How far along an order is in terms line items fulfilled. Valid values are: shipped, unfulfilled or partial.`,
    },
    {
      value: 'line_items.fulfillable_quantity',
      name: 'Line Item Fulfillable Quantity',
      description: `The amount available to fulfill. This is the quantity - max(refunded_quantity, fulfilled_quantity) - pending_fulfilled_quantity - open_fulfilled_quantity.)`,
    },
    {
      value: 'line_items.fulfillment_service',
      name: 'Line Item Fulfillment Service',
      description: `Service provider who is doing the fulfillment. Valid values are either 'manual' or the name of the provider. eg: 'amazon', 'shipwire', etc.`,
    },
    {
      value: 'line_items.sku',
      name: 'Line Item Sku',
      description: `A unique identifier of the item in the fulfillment.`,
    },
    {
      value: 'line_items.grams',
      name: 'Line Item Grams',
      description: `The weight of the item in grams.`,
    },
    {
      value: 'line_items.product_id',
      name: 'Line Item Product ID',
      description: `The ID of the product that the line item belongs to.`,
    },
    {
      value: 'line_items.requires_shipping',
      name: 'Line Item Requires Shipping',
      description: `Whether the item requires shipping.`,
    },
    {
      value: 'line_items.variant_id',
      name: 'Line Item Variant ID',
      description: `The id of the product variant.`,
    },
    {
      value: 'line_items.variant_title',
      name: 'Line Item Variant Title',
      description: `The title of the product variant.`,
    },
    {
      value: 'line_items.vendor',
      name: 'Vendor',
      description: `The name of the supplier of the item.`,
    },
    {
      value: 'line_items.gift_card',
      name: 'Line Item Gift Card',
      description: `States whether or not the line_item is a gift card. If so, the item is not taxed or considered for shipping charges.`,
    },
    {
      value: 'line_items.taxable',
      name: 'Line Item Taxable',
      description: `States whether or not the product was taxable. Values are: true or false.`,
    },
    {
      value: 'line_items.total_discount',
      name: 'Line Item Discount',
      description: `The total discount amount applied to this line item. This value is not subtracted in the line item price.`,
    },
    {
      value: 'line_items.properties',
      name: 'Line Item Properties',
      description: `An array of custom information for an item that has been added to the cart. Often used to provide product customization options.`,
    },
  ],
  // TODO: Transactions must be retrieved as its own request based on the order id. Doesn't come included in the Orders api.
  // /admin/api/2022-01/orders/{order_id}/transactions.json
  transactions: [
    {
      value: 'transactions.amount',
      name: 'Total',
      description: `The amount of money that the transaction was for.`,
    },
    {
      value: 'transactions.gateway',
      name: 'Payment Method',
      description: `The name of the gateway the transaction was issued through. A list of gateways can be found on Shopifys Payment Gateway page.`,
    },
    {
      value: 'transactions.status',
      name: 'Transaction Status',
      description: `The status of the transaction. Valid values are:<br> <ul><li>pending</li><li>failure</li><li>success</li><li>error</li></ul>`,
    },
    {
      value: 'transactions.kind',
      name: 'Transaction Kind',
      description: `The kind of transaction:<br><ul><li><b>authorization</b>: Money that the customer has agreed to pay. Authorization period lasts for up to 7 to 30 days (depending on your payment service) while a store awaits for a customer's capture.'</li><li><b>capture</b>: Transfer of money that was reserved during the authorization of a shop.</li><li><b>sale</b>: The combination of authorization and capture, performed in one single step.</li><li><b>void</b>: The cancellation of a pending authorization or capture.</li><li><b>refund</b>: The partial or full return of the captured money to the customer.</li></ul>`,
    },
    {
      value: 'transactions.currency',
      name: 'Transaction Currency',
      description: `The three letter code (ISO 4217) for the currency used for the payment.`,
    },
    {
      value: 'transactions.processed_at',
      name: 'Paid At',
      description: `The date and time (ISO 8601 format) when a transaction was processed. This value is the date that's used in the analytic reports. By default, it matches the created_at value.`,
    },
  ],
  billingAddress: [
    {
      value: 'billing_address.first_name',
      name: 'Billing First Name',
      description: `The first name of the person associated with the payment method.`,
    },
    {
      value: 'billing_address.last_name',
      name: 'Billing Last Name',
      description: `The last name of the person associated with the payment method.`,
    },
    {
      value: 'billing_address.address1',
      name: 'Billing Address1',
      description: `The street address of the billing address.`,
    },
    {
      value: 'billing_address.city',
      name: 'Billing City',
      description: `The city of the billing address.`,
    },
    {
      value: 'billing_address.zip',
      name: 'Billing Zip',
      description: `The zip or postal code of the billing address.`,
    },
    {
      value: 'billing_address.country',
      name: 'Billing Country',
      description: `The name of the country of the billing address.`,
    },
    {
      value: 'billing_address.province',
      name: 'Billing Province',
      description: `The name of the state or province of the billing address.`,
    },
    {
      value: 'billing_address.name',
      name: 'Billing Name',
      description: `The full name of the person associated with the payment method.`,
    },
    {
      value: 'billing_address.address2',
      name: 'Billing Address2',
      description: `An optional additional field for the street address of the billing address.`,
    },
    {
      value: 'billing_address.company',
      name: 'Billing Company',
      description: `The company of the person associated with the billing address.`,
    },
    {
      value: 'billing_address.phone',
      name: 'Billing Phone',
      description: `The phone number at the billing address.`,
    },
    {
      value: 'billing_address.province_code',
      name: 'Billing Province Code',
      description: `The two-letter abbreviation of the state or province of the billing address.`,
    },
    {
      value: 'billing_address.country_code',
      name: 'Billing Country Code',
      description: `The two-letter code (ISO 3166-1 alpha-2 two-letter country code) for the country of the billing address.)`,
    },
    // TODO: Invalid. Find equivalent
    // {
    //   value: 'billing_address.default',
    //   name: 'Billing Is Default',
    //   description: `Default billing address. Valid values are true or false.`,
    // },
  ],
  // TODO: discount_codes actually returns an array now
  discountCodes: [
    {
      value: 'discount_codes.amount',
      name: 'Discount Amount',
      description: `The amount of the discount. The type field determines the unit of this amount.`,
    },
    {
      value: 'discount_codes.code',
      name: 'Discount Code',
      description: `The discount code.`,
    },
    {
      value: 'discount_codes.type',
      name: 'Discount Type',
      description: `The type of discount. Valid values are:<br><ul><li><b>fixed_amount</b>: The default value. "Applies a discount of amount as a unit of the store's currency. For example, if amount is 30 and the store's currency is USD, then 30 USD is deducted from the order total when the discount is applied.</li><li><b>percentage</b>: Applies a percentage discount of amount. For example, if amount is 30, then 30% of the order total will be deducted when the discount is applied.</li><li><b>shipping</b>: Applies a free shipping discount on orders that have a shipping rate less than or equal to amount. For example, if amount is 30, the discount will give the customer free shipping for any shipping rate that is less than or equal to $30.</li></ul>`,
    },
  ],
  shippingAddress: [
    {
      value: 'shipping_address.first_name',
      name: 'Shipping First Name',
      description: `The first name of the person associated with the payment method.`,
    },
    {
      value: 'shipping_address.last_name',
      name: 'Shipping Last Name',
      description: `The last name of the person associated with the payment method.`,
    },
    {
      value: 'shipping_address.address1',
      name: 'Shipping Address1',
      description: `The street address of the shipping address.`,
    },
    {
      value: 'shipping_address.city',
      name: 'Shipping City',
      description: `The city of the shipping address.`,
    },
    {
      value: 'shipping_address.zip',
      name: 'Shipping Zip',
      description: `The zip or postal code of the shipping address.`,
    },
    {
      value: 'shipping_address.country',
      name: 'Shipping Country',
      description: `The name of the country of the shipping address.`,
    },
    {
      value: 'shipping_address.province',
      name: 'Shipping Province',
      description: `The name of the state or province of the shipping address.`,
    },
    {
      value: 'shipping_address.name',
      name: 'Shipping Name',
      description: `The full name of the person associated with the payment method.`,
    },
    {
      value: 'shipping_address.address2',
      name: 'Shipping Address2',
      description: `An optional additional field for the street address of the shipping address.`,
    },
    {
      value: 'shipping_address.company',
      name: 'Shipping Company',
      description: `The company of the person associated with the shipping address.`,
    },
    {
      value: 'shipping_address.latitude',
      name: 'Shipping Latitude',
      description: `The latitude of the shipping address.`,
    },
    {
      value: 'shipping_address.longitude',
      name: 'Shipping Longitude',
      description: `The longitude of the shipping address.`,
    },
    {
      value: 'shipping_address.phone',
      name: 'Shipping Phone',
      description: `The phone number at the shipping address.`,
    },
    {
      value: 'shipping_address.country_code',
      name: 'Shipping Country Code',
      description: `The two-letter code for the country of the shipping address.`,
    },
    {
      value: 'shipping_address.province_code',
      name: 'Shipping Province Code',
      description: `The two-letter abbreviation of the state or province of the shipping address.`,
    },
  ],
  // TODO: The API has more values than are listed here
  // returns array
  shippingLines: [
    {
      value: 'shipping_lines.code',
      name: 'Shipping Method Code',
      description: `A reference to the shipping method.`,
    },
    {
      value: 'shipping_lines.discounted_price',
      name: 'Shipping Discounted Price',
      description: `The price of the shipping method after line-level discounts have been applied. Doesn't reflect cart-level or order-level discounts.`,
    },
    {
      value: 'shipping_lines.price',
      name: 'Shipping Price',
      description: `The price of this shipping method.`,
    },
    {
      value: 'shipping_lines.source',
      name: 'Shipping Method Source',
      description: `The source of the shipping method.`,
    },
    {
      value: 'shipping_lines.title',
      name: 'Shipping Method',
      description: `The title of the shipping method.`,
    },
    {
      value: 'shipping_lines.carrier_identifier',
      name: 'Shipping Carrier Identifier',
      description: `A reference to the carrier service that provided the rate. Present when the rate was computed by a third-party carrier service.`,
    },
    {
      value: 'shipping_lines.requested_fulfillment_service_id',
      name: 'Shipping Requested Fulfillment Service Id',
      description: `A reference to the fulfillment service that is being requested for the shipping method. Present if the shipping method requires processing by a third party fulfillment service; null otherwise.`,
    },
  ],
  taxLines: [
    {
      value: 'tax_lines.price',
      name: 'Tax Line Value',
      description: `The amount of tax to be charged.`,
    },
    {
      value: 'tax_lines.rate',
      name: 'Tax Line Rate',
      description: `The rate of tax to be applied`,
    },
    {
      value: 'tax_lines.title',
      name: 'Tax Line Name',
      description: `The name of the tax`,
    },
    {
      value: 'tax_lines.channel_liable',
      name: 'Tax Line Channel Liable',
      description:
        'Whether the channel that submitted the tax line is liable for remitting. A value of null indicates unknown liability for the tax line.',
    },
  ],
  // https://shopify.dev/api/admin-rest/2022-01/resources/fulfillment#resource_object
  // TODO: The shape of the data here's a little weird. Verify each field
  fulfillment: [
    {
      value: 'fulfillment_orders.assigned_location_id',
      name: 'Location Id',
      description: `The ID of the location that has been assigned to do the work.`,
    },
    {
      value: 'fulfillments.tracking_company',
      name: 'Tracking Company',
      description: `The name of the tracking company.`,
    },
    {
      value: 'fulfillments.tracking_numbers',
      name: 'Tracking Number',
      description: `Tracking numbers, provided by the shipping company.<br><br>It is highly recommended that you send the tracking company and/or the tracking URL as well. If neither one of these is sent, then the tracking company will be determined automatically. This can result in an invalid tracking URL.<br>When accounts are enabled, it is also displayed in the customer's order history.`,
    },
    {
      value: 'fulfillments.tracking_urls',
      name: 'Tracking URLs',
      description: `The URLs of tracking pages for the fulfillment.`,
    },
  ],
};
